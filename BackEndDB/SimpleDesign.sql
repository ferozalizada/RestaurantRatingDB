-- CREATE A SIMPLE TABLE FOR RATING

CREATE TABLE RATER ( 
	USERID VARCHAR(20) PRIMARY KEY,
	EMAIL VARCHAR(20) NOT NULL UNIQUE,
	NAME VARCHAR(20) NOT NULL,
	JOIN-DATE DATE DEFAULT(NOW),
	TYPE VARCHAR(20),
	REPUTATION INT, 
	
	PRIMARY KEY(USERID),
	CONSTRAINT CHECK_REPUTAION CHECK (REPUTATION BETWEEN 1 AND 5)
	
);
-- REPUTATION IS CALCULATED BASED ON THE NUMBER OF RATERS

CREATE TABLE RATING (
	USERID VARCHAR(20),
	DATE DATE DEFAULT(NOW),
	PRICE NUMBER, 
	FOOD VARCHAR(20), 
	MOOD INT, 
	STAFF INT, 
	COMMENTS VARCHAR(100),
	RESTAURANTID VARCHAR(20),

	PRIMARY KEY(USERID, DATE),
	FOREIGN KEY (USERID) REFERENCES RATER (USERID),
	FOREIGN KEY (DATE) REFERENCES RESTAURANT (DATE)
);


CREATE TABLE RESTAURANT (
	RESTAURANTID VARCHAR(20), 
	NAME VARCHAR(20), 
	TYPE INT, 
	URL VARCHAR(100),

	PRIMARY KEY (RESTAURANTID),
	FOREIGN
);

CREATE TABLE LOCATION (
	LOCATIONID VARCHAR(20),
	FIRST-OPEN-DATE DATE,
	MANAGER-NAME VARCHAR(20),
	PHONE-NUMBER NUMBER,
	STREET-ADDRESS VARCHAR(100),
	HOUR-OPEN TIME,
	HOUR-CLOSE TIME,
	RESTAURANTID VARCHAR(20),

	PRIMARY KEY(LOCATIONID),
	FOREIGN KEY (RESTAURANTID) REFERENCES RESTAURANTID (RESTAURANTID)
);

CREATE TABLE MENUITEM (
	ITEMID INT, 
	NAME VARCHAR(20), 
	TYPE VARCHAR(20), 
	CATEGORY VARCHAR(20), 
	DESCRIPTION VARCHAR(100), 
	PRICE NUMBER,
	RESTAURANTID VARCHAR(20),

	PRIMARY KEY (ITEMID),
	FOREIGN KEY (RESTAURANTID) REFERENCES RESTAURANT (RESTAURANTID)
);

CREATE TABLE RATINGITEM (
	USERID VARCHAR(20), 
	DATE DATE, 
	ITEMID, 
	RATING, 
	COMMENTS,

	FOREIGN KEY (USERID) REFERENCES RATING (USERID),
	FOREIGN KEY (DATE) REFERENCES RESTAURANT (DATE),
	FOREIGN KEY (ITEMID) REFERENCES MENUITEM (ITEMID),
	CONSTRAINT CHECK_RATING CHECK (RATING BETWEEN 1 AND 5),
	PRIMARY KEY (USERID, DATE, ITEMID)

	
);